import os
import re
os.environ['MPLCONFIGDIR'] = os.getcwd() + "/configs/"
import matplotlib.pyplot as plt
from matplotlib.ticker import (MultipleLocator, AutoMinorLocator)
import numpy as np

def draw_graph(iterable, **props):
	nrows = len(iterable)

	figure, axes = plt.subplots(nrows=nrows, ncols=1)

	
	for i, ax in enumerate(iterable):
		x = ax[0]
		y = ax[1]

		axes[i].set_xlim(xmin=10, xmax=60)
		axes[i].set_ylim(ymin=0, ymax=400)

		axes[i].plot(x, y)
		axes[i].set(xticks=[], yticks=[])

		if i + 1 == nrows:
			axes[i].set(xticks=[], yticks=[])
			axes[i].xaxis.set_minor_locator(MultipleLocator(5))
			axes[i].xaxis.set_major_locator(MultipleLocator(10))


	plt.savefig(os.getcwd() + "/output/xrd_graph")


files = [filename for filename in os.listdir("./source/") if filename.endswith('.txt')]
figures = []
for i, file in enumerate(files):
	with open("./source/" + file, 'r', newline='') as f:
		reader = f.readlines()

	x = []
	y = []
	is_data = False

	for row in reader:
		if is_data:
			pair = [x[0] for x in re.finditer(r"(\d*\.?\d+)", row.strip())]

			if pair:
				try:
					x.append(float(pair[0]))
					y.append(float(pair[1]))
				except:
					raise SystemExit(f"One or both values in {pair} could not be converted to number.")

		if "[Data]" in row:
			is_data = True

	figures.append([x, y])


draw_graph(figures)